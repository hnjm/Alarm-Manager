<UserControl
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:alarmManager="clr-namespace:Alarm_Manager"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:command="http://www.galasoft.ch/mvvmlight"
      xmlns:Model="clr-namespace:Alarm_Manager.Model" x:Class="Alarm_Manager.Exceptions"
      mc:Ignorable="d" 
              Width="496.838" >
    <UserControl.Resources>
        <Model:ZeroToHidden x:Key="ZeroToHidden"/>

        <Model:ZeroToVisible x:Key="ZeroToVisible"/>
        <Model:ShortDateFormat x:Key="ShortDateFormat"/>
        <Model:DateShortener x:Key="DateShortener"/>
        <Style  TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Path="Exceptions" Source="{StaticResource Locator}"/>
    </UserControl.DataContext>
    <Grid>

        <StackPanel>

            <DataGrid x:Name="MetroDataGrid"
				SelectedItem="{Binding SelectedException}"
				RenderOptions.ClearTypeHint="Enabled"
				MaxHeight="400"
				CanUserAddRows="False"
				SelectionUnit="FullRow"
				AutoGenerateColumns="False"
				ItemsSource="{Binding Exceptions}"  Visibility="{Binding Items.Count, Converter={StaticResource ZeroToHidden}, ElementName=MetroDataGrid, Mode=OneWay}"
                   >
                <DataGrid.Columns>

                    <DataGridTextColumn Header="Name"
						Binding="{Binding Name}" />
                    <DataGridTemplateColumn  CanUserSort="True" Header="Date">

                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Date, Converter={StaticResource ShortDateFormat}}"   />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>

                                <DatePicker>
                                    <DatePicker.SelectedDate>
                                        <Binding Path="Date"  >
                                            <Binding.ValidationRules>
                                                <alarmManager:ExceptionValidation/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>

                                </DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <alarmManager:DataGridComboBoxColumnWithBindingHack
						Header="Schedule"
						SelectedValueBinding="{Binding Schedule1}"
                
						DisplayMemberPath="Name" 
						ItemsSource="{Binding DataContext.Schedules, RelativeSource={RelativeSource Findancestor, AncestorType={x:Type UserControl}}}" />

                    <DataGridTextColumn Binding="{Binding Description}"  MaxWidth="170" Header="Description"></DataGridTextColumn>

                    <DataGridTemplateColumn Width="*"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Width="20" Height="20" Command="{Binding DataContext.DeleteExceptioCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" >

                                    <Rectangle Width="10"
										Height="10"
										Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill"
												Visual="{DynamicResource appbar_delete}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="CellEditEnding">
                        <command:EventToCommand
								Command="{Binding Main.RowEditEndingRelayCommand, Mode=OneWay, Source={StaticResource Locator}}"
								CommandParameter="{Binding Mode=OneWay}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="RowEditEnding">
                        <command:EventToCommand
								Command="{Binding Main.RowEditEndingRelayCommand, Mode=OneWay, Source={StaticResource Locator}}"
								CommandParameter="{Binding Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
            <TextBlock HorizontalAlignment="Center"  Height="69" Width="280" TextWrapping="Wrap" FontSize="16" Text="You haven't set up any exceptions click the add button below to get started" Visibility="{Binding Items.Count, Converter={StaticResource ZeroToVisible}, ElementName=MetroDataGrid, Mode=OneWay}" Margin="114,0,103,0"/>

            <Button Command="{Binding ShowAddNewExceptionCommand}" HorizontalAlignment="Center" Width="40"  Height="36"
                    
				Style="{DynamicResource MetroCircleButtonStyle}"   >
                <Rectangle Width="10"
					Height="10"
					Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
							Visual="{DynamicResource appbar_add}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
