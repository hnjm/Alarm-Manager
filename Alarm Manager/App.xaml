<Application x:Class="Alarm_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:Alarm_Manager.ViewModel"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro"
             StartupUri="MainWindow.xaml"
             mc:Ignorable="d" 
             
            >

    <Application.Resources>
        <!--Global View Model Locator-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
               <ResourceDictionary Source="Resources/ModernUiPorgresRing.xaml"></ResourceDictionary>
               
            <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle"
                   TargetType="Label">
                <Setter Property="FontSize"
                        Value="22" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
            </Style>
            <Style TargetType="{x:Type TextBox}"
       x:Key="OpenFileMetroTextBox"
       BasedOn="{StaticResource ButtonCommandMetroTextBox}">
                <Setter Property="Controls:TextboxHelper.ButtonTemplate">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid x:Name="contentPresenter"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="{TemplateBinding Padding}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Opacity="0.75">
                                    <Canvas Width="15"
                            Height="15"
                            Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0">
                                        <Path Width="15.7781"
                                Height="15.7781"
                                Stretch="Fill"
                                Fill="{TemplateBinding Foreground}"
                                Data="F1 M 16.6668,20L 13,28.5336L 13,16L 23,16L 23,15C 23,13.8954 23.8954,13 25,13L 32,13C 33.1046,13 35,14.8954 35,16L 35,20L 16.6668,20 Z M 35,32L 28,32L 13,32L 17.5833,21L 39.5833,21L 35,32 Z " />
                                    </Canvas>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                        
                    </Setter.Value>
                    
                </Setter>
                
            </Style>
            <Style x:Key="MetroCircleButtonStyle"
TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle"
Value="{StaticResource MetroCircleButtonFocusVisual}" />
                <Setter Property="Background"
Value="Transparent" />
                <Setter Property="BorderThickness"
Value="2" />
                <Setter Property="BorderBrush"
Value="{DynamicResource GrayBrush3}" />
                <Setter Property="HorizontalContentAlignment"
Value="Center" />
                <Setter Property="VerticalContentAlignment"
Value="Center" />
                <Setter Property="Padding"
Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"
Margin="4"
StrokeThickness="0" />
                                <Ellipse x:Name="ellipsebg"
Fill="{DynamicResource BlackBrush}"
Opacity="0"
Margin="4"
StrokeThickness="0" />
                                <Ellipse x:Name="ellipse"
Margin="4"
Stroke="{TemplateBinding BorderBrush}"
StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />
                                <ContentPresenter x:Name="content"
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
Margin="{TemplateBinding Padding}"
RecognizesAccessKey="True"
SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ellipsebg"
Storyboard.TargetProperty="Opacity"
From="0"
To="0.3"
Duration="0:0:0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!-- some out fading -->
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ellipsebg"
Storyboard.TargetProperty="Opacity"
To="0"
Duration="0:0:0.5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
Value="True">
                                    <Setter TargetName="ellipse"
Property="Opacity"
Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
Value="False">
                                    <Setter TargetName="ellipse"
Property="Opacity"
Value="0.7" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
Value="false">
                                    <Setter Property="Foreground"
Value="{DynamicResource GrayBrush7}" />
                                    <Setter TargetName="ellipse"
Property="Opacity"
Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <vm:ViewModelLocator x:Key="Locator"
                             d:IsDataSource="True" />
            <!-- custom header template for navigationless flyouts -->
            <DataTemplate x:Key="CustomeHeaderTemplate" 
x:Shared="True">
                <DockPanel x:Name="dpHeader" Visibility="Collapsed"
Margin="10,25,10,10"
VerticalAlignment="Center"
LastChildFill="True">
                    <Button x:Name="nav"
Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}, Path=CloseCommand, Mode=OneWay}"
DockPanel.Dock="Left"
Style="{DynamicResource MetroCircleButtonStyle}"
Height="40"
Width="40"
 Visibility="Collapsed"                       
FontFamily="Segoe UI Symbol"
Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}, Path=Foreground}"
FontSize="16"
VerticalAlignment="Bottom">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <actions:SetFlyoutOpenAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}}"
Value="False" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Rectangle Width="20"
Height="15"
Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}, Path=Foreground}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill">
                                    <VisualBrush.Visual>
                                        <Canvas Width="48"
Height="48"
Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
UseLayoutRounding="False">
                                            <Path Width="25"
Height="18"
Canvas.Left="12"
Canvas.Top="15"
Stretch="Fill"
Fill="Black"
Data="F1 M 12,22L 12,26L 28.25,26L 21,33L 27.5,33L 37,24L 27.5,15L 21,15L 28.25,22L 12,22 Z " />
                                        </Canvas>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <TextBlock Text="{Binding}"
x:Name="PART_BackButton"
FontSize="20"
Margin="15,0,0,0"
VerticalAlignment="Center" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}}"
Value="Left">
                        <Setter TargetName="nav"
Property="DockPanel.Dock"
Value="Right" />
                        <Setter TargetName="PART_BackButton"
Property="TextAlignment"
Value="Right" />
                        <Setter TargetName="PART_BackButton"
Property="Margin"
Value="0,0,15,0" />
                        <Setter TargetName="nav"
Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="-1" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}}"
Value="Top">
                        <Setter TargetName="dpHeader"
Property="Margin"
Value="10" />
                        <Setter TargetName="nav"
Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="-90" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}}"
Value="Bottom">
                        <Setter TargetName="dpHeader"
Property="Margin"
Value="10" />
                        <Setter TargetName="nav"
Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="90" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <ControlTemplate x:Key="FlyoutTemplate"
TargetType="{x:Type Controls:Flyout}">
                <Grid x:Name="root"
Margin="{TemplateBinding Margin}"
Background="{TemplateBinding Background}">
                    <Grid.RenderTransform>
                        <TranslateTransform />
                    </Grid.RenderTransform>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState x:Name="Default" />
                            <VisualState x:Name="Hide">
                                <Storyboard x:Name="HideStoryboard">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="0"
x:Name="hideFrame">
                                        </SplineDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="0"
x:Name="hideFrameY">
                                        </SplineDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.Opacity)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="1"
x:Name="fadeOutFrame"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Show">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="0"
x:Name="showFrame">
                                        </SplineDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="0"
x:Name="showFrameY">
                                        </SplineDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
Storyboard.TargetProperty="(UIElement.Opacity)"
Storyboard.TargetName="root">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.750"
KeySpline="0.25,1,0.05,1"
Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <DockPanel>
                        <ContentPresenter x:Name="PART_Header"
DockPanel.Dock="Top"
ContentSource="Header"
ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ContentPresenter x:Name="PART_Content"
DockPanel.Dock="Bottom">
                        </ContentPresenter>
                    </DockPanel>
                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource Self}}"
Value="Top">
                        <Setter TargetName="PART_Header"
Property="DockPanel.Dock"
Value="Left" />
                        <Setter TargetName="PART_Content"
Property="DockPanel.Dock"
Value="Right" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource Self}}"
Value="Bottom">
                        <Setter TargetName="PART_Header"
Property="DockPanel.Dock"
Value="Left" />
                        <Setter TargetName="PART_Content"
Property="DockPanel.Dock"
Value="Right" />
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="nonavflyout" TargetType="{x:Type Controls:Flyout}">
                <Setter Property="Visibility"
Value="Hidden" />
                <Setter Property="KeyboardNavigation.TabNavigation"
Value="Cycle" />
                <Setter Property="VerticalAlignment"
Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
Value="Stretch" />
                <Setter Property="HeaderTemplate"
Value="{StaticResource CustomeHeaderTemplate}" />
               
                <Setter Property="FocusVisualStyle"
Value="{x:Null}" />
                <Setter Property="Foreground"
Value="{DynamicResource FlyoutForegroundBrush}" />
                <Setter Property="Background"
Value="{DynamicResource FlyoutBackgroundBrush}" />
            </Style>
        </ResourceDictionary>

    </Application.Resources>

</Application>
